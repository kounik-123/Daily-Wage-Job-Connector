<section class="hero kk-bubble-bg">
  <!-- Floating Shapes -->
  <div class="shape-container"></div>
  <div class="container">
    <div class="row align-items-center">
      <div class="col-lg-6" data-aos="fade-right" data-aos-duration="800">
        <div class="hero-content">
          <h1 class="hero-title">
            Find Daily Wage Workers & Jobs with
            <span class="kk-text-navy">Kaaj-Khuji</span>
          </h1>
          <p class="hero-subtitle mt-3">
            Connecting skilled workers with employers in your area. Quick, reliable, and hassle-free hiring for daily wage jobs.
          </p>

          <!-- Scramble tiles block (three symmetrical lines) -->
          <div class="scramble-text-container" id="scramble-container">
              <!-- Boxes will be dynamically generated by JavaScript -->
          </div>

          <div class="d-flex flex-wrap gap-3 mt-4 justify-content-center">
             <a href="/auth/login" class="btn btn-gradient-blue rounded-pill px-4 py-2">I Need Workers</a>
             <a href="/auth/signup" class="btn btn-gradient-orange rounded-pill px-4 py-2">I Need Work</a>
           </div>
        </div>
      </div>
      <div class="col-lg-6 text-center" data-aos="fade-left" data-aos-duration="800">
    <img
      src="/images/image1.jpg"
      alt="Kaaj-Khuji App"
      class="img-fluid rounded-4 shadow-sm hero-image"
      loading="lazy"
      decoding="async"
    />
  </div>
    </div>
    <!-- How It Works Section -->
  <section class="section" id="how-it-works">
    <div class="section-title" data-aos="fade-up">
      <h2>How It Works</h2>
      <p>Simple steps to connect workers with employers</p>
    </div>
    <div class="steps">
      <div class="step-card" data-aos="fade-up" data-aos-delay="100">
        <div class="step-icon">
          <i class="fas fa-user-plus"></i>
        </div>
        <h3>Create Profile</h3>
        <p>Sign up as a worker or employer and create your profile with all necessary details.</p>
      </div>
      <div class="step-card" data-aos="fade-up" data-aos-delay="150">
        <div class="step-icon">
          <i class="fas fa-id-card"></i>
        </div>
        <h3>Verify Identity</h3>
        <p>Complete the verification process to ensure trust and safety for all users.</p>
      </div>
      <div class="step-card" data-aos="fade-up" data-aos-delay="200">
        <div class="step-icon">
          <i class="fas fa-search-location"></i>
        </div>
        <h3>Find Matches</h3>
        <p>Workers find jobs and employers find workers based on skills, location, and availability.</p>
      </div>
      <div class="step-card" data-aos="fade-up" data-aos-delay="250">
        <div class="step-icon">
          <i class="fas fa-comments"></i>
        </div>
        <h3>Communicate</h3>
        <p>Chat directly through the app to discuss job details, timing, and payment terms.</p>
      </div>
      <div class="step-card" data-aos="fade-up" data-aos-delay="300">
        <div class="step-icon">
          <i class="fas fa-handshake"></i>
        </div>
        <h3>Connect & Work</h3>
        <p>Connect through the app, agree on terms, and start working together.</p>
      </div>
      <div class="step-card" data-aos="fade-up" data-aos-delay="350">
        <div class="step-icon">
          <i class="fas fa-star"></i>
        </div>
        <h3>Rate & Review</h3>
        <p>After job completion, rate your experience to help build a trusted community.</p>
      </div>
    </div>
  </section>

  <!-- Key Features Section -->
  <section class="section" id="features">
    <div class="section-title" data-aos="fade-up">
      <h2>Key Features</h2>
      <p>What makes Kaaj-Khuji the best platform for daily wage jobs</p>
    </div>
    <div class="features-grid">
      <div class="feature-card" data-aos="fade-up" data-aos-delay="100">
        <div class="feature-icon">
          <i class="fas fa-map-marker-alt"></i>
        </div>
        <h3>Location-Based Matching</h3>
        <p>Find workers and jobs in your vicinity with our smart location-based matching system.</p>
      </div>
      <div class="feature-card" data-aos="fade-up" data-aos-delay="200">
        <div class="feature-icon">
          <i class="fas fa-bell"></i>
        </div>
        <h3>Instant Job Alerts</h3>
        <p>Get notified instantly when new job opportunities match your skills and location.</p>
      </div>
      <div class="feature-card" data-aos="fade-up" data-aos-delay="300">
        <div class="feature-icon">
          <i class="fas fa-shield-alt"></i>
        </div>
        <h3>Verified Profiles</h3>
        <p>All workers and employers are verified for your safety and peace of mind.</p>
      </div>
    </div>
  </section>

  <!-- App Showcase Section -->
  <section class="section">
    <div class="app-showcase">
      <div class="app-feature-list" data-aos="fade-right">
        <h2>Download Our Mobile App</h2>
        <p>Get the full experience with our easy-to-use mobile application</p>
        <div class="app-feature">
          <i class="fas fa-check-circle"></i>
          <div>
            <h3>Easy Navigation</h3>
            <p>User-friendly interface designed for everyone</p>
          </div>
        </div>
        <div class="app-feature">
          <i class="fas fa-check-circle"></i>
          <div>
            <h3>Real-time Messaging</h3>
            <p>Communicate directly with workers or employers</p>
          </div>
        </div>
        <div class="app-feature">
          <i class="fas fa-check-circle"></i>
          <div>
            <h3>Rating System</h3>
            <p>Build trust with ratings and reviews</p>
          </div>
        </div>
      </div>
      <img src="/images/appImage.jpg" alt="Kaaj-Khuji Mobile App" class="phone-mockup" data-aos="fade-left">
    </div>
  </section>
  <!-- Testimonials Section -->
  <section class="section" id="testimonials">
    <div class="section-title" data-aos="fade-up">
      <h2>Team Members</h2>
    </div>
    <div class="testimonials-grid">
      <div class="testimonial-card" data-aos="fade-up" data-aos-delay="100">
        <div class="testimonial-image">
          <img src="/images/kounik.jpg" alt="User">
        </div>
        <div class="testimonial-author">
          <h4>Kounik Biswas</h4>
          <p>Frontend Developer</p>
        </div>
        <br>
        <p class="testimonial-text">"Kounik is responsible for designing and developing the user interface of the Daily Wage Job Connector. His work ensures that both job seekers and employers have a seamless, intuitive, and visually appealing experience. He focuses on responsive layouts, smooth animations, and user-friendly navigation, bringing the platform to life with engaging UI elements.
"</p>
      </div>
      <div class="testimonial-card" data-aos="fade-up" data-aos-delay="200">
        <div class="testimonial-image">
          <img src="/images/bistrina.jpg" alt="User">
        </div>
        <div class="testimonial-author">
          <h4>Bistrina Sarkar</h4>
          <p>Frontend Developer</p>
        </div>
        <br>
        <p class="testimonial-text">"Bistrina contributes to the frontend development by working on specific modules and UI components different from Kounik’s. While Kounik may focus on dashboards and main navigation, Bistrina specializes in forms, job posting pages, and interaction elements. Her contributions help maintain design consistency and ensure the platform looks professional across all devices.
"</p>
        
      </div>
      <div class="testimonial-card" data-aos="fade-up" data-aos-delay="300">
        <div class="testimonial-image">
          <img src="/images/pritam(1).jpg" alt="User">
        </div>
        <div class="testimonial-author">
          <h4>Pritam Sadhu</h4>
          <p>Backend Developer</p>
        </div>
        <br>
        <p class="testimonial-text">"Pritam is responsible for building and maintaining the server-side logic of the Daily Wage Job Connector. He manages database interactions, authentication, and API integration, ensuring smooth communication between the frontend and backend. His work guarantees that all user data is handled securely and the system functions reliably under real-time conditions."</p>
        
      </div>
    </div>
  </section>

  </div>
  
</section>
<script>
  const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz@!#$%^&";
    const messages = [
      "Track employee work hours efficiently",
      "Automate attendance and wage calculations",
      "Generate accurate payroll reports instantly",
      "Enhance transparency in wage distribution",
      "Empower HR with real-time insights"
    ];

    const scrambleBox = document.getElementById("scramble-container");
    let index = 0;
    let direction = "left";

    function scrambleToText(text, direction) {
      const words = text.split(" ");
      let totalLength = 0;
      const boxes = [];

      scrambleBox.innerHTML = "";

      // Always create exactly 3 rows
      const exactRows = 3;
      const rows = [];
      
      // Create 3 empty rows first
      for (let i = 0; i < exactRows; i++) {
        const row = document.createElement("div");
        row.classList.add("scramble-word");
        rows.push(row);
        scrambleBox.appendChild(row);
      }
      
      // Calculate approximate characters per row
      const totalChars = text.replace(/\s/g, '').length;
      const charsPerRow = Math.ceil(totalChars / exactRows);
      
      let currentRow = 0;
      let currentRowChars = 0;
      
      words.forEach((word) => {
        // If adding this word would exceed the target chars per row and we're not on the last row
        if (currentRowChars + word.length > charsPerRow && currentRow < exactRows - 1) {
          currentRow++;
          currentRowChars = 0;
        }
        
        // Skip if we've filled all rows (shouldn't happen with our logic)
        if (currentRow >= exactRows) return;
        
        for (let i = 0; i < word.length; i++) {
          const charBox = document.createElement("div");
          charBox.classList.add("scramble-letter");
          charBox.textContent = word[i];
          rows[currentRow].appendChild(charBox);
          boxes.push({ box: charBox, char: word[i], index: totalLength });
          totalLength++;
          currentRowChars++;
        }
        
        // Add space after word
        const space = document.createElement("div");
        space.style.width = "4px";
        rows[currentRow].appendChild(space);
      });

      animateScramble(boxes, direction, totalLength);
    }

    function animateScramble(boxes, direction, totalLength) {
      let progress = 0;
      const interval = setInterval(() => {
        const current = Math.round(progress);
        boxes.forEach(({ box, char, index }) => {
          const showFinal = direction === "left"
            ? index <= current
            : index >= totalLength - 1 - current;
          if (showFinal) {
            box.textContent = char;
            box.classList.add("active"); // Add highlight and bold
          } else {
            const rand = letters[Math.floor(Math.random() * letters.length)];
            box.textContent = rand;
            box.classList.remove("active"); // Remove highlight while scrambling
          }
        });
        progress += 0.3;
        if (progress >= totalLength) {
          clearInterval(interval);
          setTimeout(() => {
            index = (index + 1) % messages.length;
            direction = direction === "left" ? "right" : "left";
            scrambleToText(messages[index], direction);
          }, 2500);
        }
      }, 45);
    }

    // Start the scramble animation when the page loads
    scrambleToText(messages[index], direction);
    // FLOATING SHAPES
    const shapeContainer = document.querySelector('.shape-container');
    const colors = ["#FF6B6B", "#6BCB77", "#4D96FF", "#FFD93D", "#9D4EDD", "#00B8A9"];
    const types = ["circle", "blob"];

    for (let i = 0; i < 15; i++) {
      const shape = document.createElement("div");
      const type = types[Math.floor(Math.random() * types.length)];
      const color = colors[Math.floor(Math.random() * colors.length)];
      const size = Math.floor(Math.random() * 100) + 60;

      shape.classList.add("shape", type);
      shape.style.backgroundColor = color;
      shape.style.width = size + "px";
      shape.style.height = size + "px";
      shape.style.left = Math.random() * 100 + "%";
      shape.style.top = Math.random() * 100 + "%";
      shape.style.animationDuration = (6 + Math.random() * 4) + "s";
      shape.style.animationDelay = Math.random() * 4 + "s";

      shapeContainer.appendChild(shape);
    }
    
</script>

<!-- CTA Section -->
<section class="cta-primary">
  <div class="container">
    <h2 data-aos="fade-up">Ready to Get Started?</h2>
    <p data-aos="fade-up" data-aos-delay="200">Join thousands of workers and employers already using Kaaj-Khuji to connect and create opportunities.</p>
    <div class="cta-buttons justify-content-center" data-aos="fade-up" data-aos-delay="400">
       <a href="/auth/signup" class="btn btn-gradient-orange rounded-pill px-4 py-3">
         <i class="fas fa-hard-hat me-2"></i> I Need Work
       </a>
       <a href="/auth/login" class="btn btn-gradient-blue rounded-pill px-4 py-3">
         <i class="fas fa-building me-2"></i> I Need Workers
       </a>
     </div>
  </div>
</section>
